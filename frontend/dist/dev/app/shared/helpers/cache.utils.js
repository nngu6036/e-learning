"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("underscore");
var CACHE_TIMEOUT = 1000 * 60 * 5;
var Cache = (function () {
    function Cache() {
    }
    Cache.objectCreate = function (record) {
        var model = record.Model;
        if (this.hit(model)) {
            var records = this.load(model);
            records.push(record);
        }
    };
    Cache.objectDelete = function (model, id) {
        if (this.hit(model)) {
            var records = this.load(model);
            records = _.reject(records, function (obj) {
                return obj["id"] == id;
            });
            this.save(model, records);
        }
    };
    Cache.objectUpdate = function (record) {
    };
    Cache.save = function (key, val) {
        this.inlineStorage[key] = { val: val, timestamp: new Date() };
    };
    Cache.load = function (key) {
        if (key in this.inlineStorage)
            return this.inlineStorage[key]["val"];
        return null;
    };
    Cache.hit = function (key) {
        if (key in this.inlineStorage) {
            var now = new Date();
            var timestamp = this.inlineStorage[key]["timestamp"];
            var success = (now.getTime() - timestamp.getTime()) <= CACHE_TIMEOUT;
            if (!success)
                this.invalidate(key);
            return success;
        }
        return false;
    };
    Cache.invalidate = function (key) {
        delete this.inlineStorage[key];
    };
    Cache.invalidateAll = function () {
        this.inlineStorage = [];
    };
    Cache.inlineStorage = {};
    return Cache;
}());
exports.Cache = Cache;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zaGFyZWQvaGVscGVycy9jYWNoZS51dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhCQUFnQztBQUVoQyxJQUFNLGFBQWEsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUVwQztJQUFBO0lBOERBLENBQUM7SUExRFUsa0JBQVksR0FBbkIsVUFBb0IsTUFBVTtRQUN6QixJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzFCLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuQixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEI7SUFFTCxDQUFDO0lBRU0sa0JBQVksR0FBbkIsVUFBb0IsS0FBWSxFQUFFLEVBQVM7UUFDdkMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ25CLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDakMsT0FBTyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQUEsR0FBRztnQkFDdkIsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUMsT0FBTyxDQUFDLENBQUM7U0FDekI7SUFFTCxDQUFDO0lBRU0sa0JBQVksR0FBbkIsVUFBb0IsTUFBVTtJQUU5QixDQUFDO0lBS00sVUFBSSxHQUFYLFVBQVksR0FBVSxFQUFFLEdBQU87UUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBSSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsQ0FBQztJQUNqRSxDQUFDO0lBR00sVUFBSSxHQUFYLFVBQVksR0FBVTtRQUNsQixJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsYUFBYTtZQUN6QixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLFNBQUcsR0FBVixVQUFXLEdBQVU7UUFDbkIsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUMzQixJQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1lBQ3JCLElBQUksU0FBUyxHQUFRLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDMUQsSUFBSSxPQUFPLEdBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksYUFBYSxDQUFDO1lBQ3RFLElBQUksQ0FBQyxPQUFPO2dCQUNSLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDekIsT0FBTyxPQUFPLENBQUM7U0FDbEI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSxnQkFBVSxHQUFqQixVQUFrQixHQUFVO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRU0sbUJBQWEsR0FBcEI7UUFDSSxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBMURjLG1CQUFhLEdBQUcsRUFBRSxDQUFDO0lBNER0QyxZQUFDO0NBOURELEFBOERDLElBQUE7QUE5RHFCLHNCQUFLIiwiZmlsZSI6ImFwcC9zaGFyZWQvaGVscGVycy9jYWNoZS51dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIF8gZnJvbSAndW5kZXJzY29yZSc7XG5cbmNvbnN0IENBQ0hFX1RJTUVPVVQgPSAxMDAwICogNjAgKiA1O1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ2FjaGUge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5saW5lU3RvcmFnZSA9IHt9O1xuXG4gICAgc3RhdGljIG9iamVjdENyZWF0ZShyZWNvcmQ6YW55KSB7XG4gICAgICAgICB2YXIgbW9kZWwgPSByZWNvcmQuTW9kZWw7XG4gICAgICAgIGlmICh0aGlzLmhpdChtb2RlbCkpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkcyA9IHRoaXMubG9hZChtb2RlbCk7XG4gICAgICAgIHJlY29yZHMucHVzaChyZWNvcmQpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cblxuICAgIHN0YXRpYyBvYmplY3REZWxldGUobW9kZWw6c3RyaW5nLCBpZDpudW1iZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuaGl0KG1vZGVsKSkge1xuICAgICAgICAgIHZhciByZWNvcmRzID0gdGhpcy5sb2FkKG1vZGVsKTtcbiAgICAgICAgcmVjb3JkcyA9IF8ucmVqZWN0KHJlY29yZHMsIG9iaj0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb2JqW1wiaWRcIl0gPT0gaWQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgIHRoaXMuc2F2ZShtb2RlbCxyZWNvcmRzKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBzdGF0aWMgb2JqZWN0VXBkYXRlKHJlY29yZDphbnkpIHtcbiAgICAgIFxuICAgIH1cblxuXG5cblxuICAgIHN0YXRpYyBzYXZlKGtleTpzdHJpbmcsIHZhbDphbnkpIHtcbiAgICAgICAgICB0aGlzLmlubGluZVN0b3JhZ2Vba2V5XSA9ICB7dmFsOnZhbCwgdGltZXN0YW1wOm5ldyBEYXRlKCl9O1xuICAgIH1cblxuXG4gICAgc3RhdGljIGxvYWQoa2V5OnN0cmluZyk6IGFueSB7XG4gICAgICAgIGlmIChrZXkgaW4gdGhpcy5pbmxpbmVTdG9yYWdlKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5saW5lU3RvcmFnZVtrZXldW1widmFsXCJdO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzdGF0aWMgaGl0KGtleTpzdHJpbmcpOmJvb2xlYW4ge1xuICAgICAgaWYgKGtleSBpbiB0aGlzLmlubGluZVN0b3JhZ2UpIHtcbiAgICAgICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICBsZXQgdGltZXN0YW1wOkRhdGUgPSB0aGlzLmlubGluZVN0b3JhZ2Vba2V5XVtcInRpbWVzdGFtcFwiXTtcbiAgICAgICAgICB2YXIgc3VjY2VzcyA9ICAobm93LmdldFRpbWUoKSAtIHRpbWVzdGFtcC5nZXRUaW1lKCkpIDw9IENBQ0hFX1RJTUVPVVQ7XG4gICAgICAgICAgaWYgKCFzdWNjZXNzKVxuICAgICAgICAgICAgICB0aGlzLmludmFsaWRhdGUoa2V5KTtcbiAgICAgICAgICByZXR1cm4gc3VjY2VzcztcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBzdGF0aWMgaW52YWxpZGF0ZShrZXk6c3RyaW5nKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmlubGluZVN0b3JhZ2Vba2V5XTtcbiAgICB9XG5cbiAgICBzdGF0aWMgaW52YWxpZGF0ZUFsbCgpIHtcbiAgICAgICAgdGhpcy5pbmxpbmVTdG9yYWdlID0gW107XG4gICAgfVxuXG59XG4iXX0=
